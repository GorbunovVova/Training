/*Задача на программирование: декодирование Хаффмана

        Восстановите строку по её коду и беспрефиксному коду символов.

        В первой строке входного файла заданы два целых числа k и l через пробел — количество различных букв,
        встречающихся в строке, и размер получившейся закодированной строки, соответственно. В следующих k
        строках записаны коды букв в формате "letter: code". Ни один код не является префиксом другого.
        Буквы могут быть перечислены в любом порядке. В качестве букв могут встречаться лишь строчные буквы
        латинского алфавита; каждая из этих букв встречается в строке хотя бы один раз. Наконец, в последней
        строке записана закодированная строка. Исходная строка и коды всех букв непусты. Заданный код таков,
        что закодированная строка имеет минимальный возможный размер.

        В первой строке выходного файла выведите строку s. Она должна состоять из строчных букв латинского алфавита.
        Гарантируется, что длина правильного ответа не превосходит 10^4 символов.*/

import java.util.Scanner;

class Huffmandecode {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int k = scanner.nextInt();
        int l = scanner.nextInt();
        String[][] letter = new String[2][k];
        int i, j;
        for (i = 0; i < k; i++) {
            letter[0][i] = scanner.next().substring(0, 1);
            letter[1][i] = scanner.next();
        }
        String str = scanner.next();
        String substr = "";
        for (i = 0; i < l; i++) {
            substr += str.charAt(i);
            for (j = 0; j < k; j++) {
                if (substr.equals(letter[1][j])) {
                    System.out.print(letter[0][j]);
                    substr = "";
                    break;
                }
            }
        }
        scanner.close();
    }
}